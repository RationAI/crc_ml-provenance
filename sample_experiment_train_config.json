{
    "train_generator": "valid_gen",
    "valid_generator": null,
    "batch_size": 1,
    "definitions": {
        "datagen": "rationai.datagens.datagens.GeneratorDatagen",
        "model": "rationai.training.models.keras_models.PretrainedNet",
        "executor": "rationai.training.executors.keras_executors.KerasExecutor"
    },
    "configurations": {
        "datagen": {
            "data_sources": {
                "_class": "rationai.datagens.datasources.HDF5DataSource",
                "_data": "/mnt/data/home/bajger/NN_pruning/histopat/datasets/hdfs_output/hdfs_output.h5",
                "definitions": {
                    "train_ds": {
                        "keys": ["train"],
                        "names": ["train", "valid"],
                        "split_probas": [0.7, 0.3],
                        "split_on": "is_cancer"
                    }
                }
            },
            "generators": {
                "train_gen": {
                    "components": {
                        "data_source": "train",
                        "sampler": "rationai.datagens.samplers.RandomTreeSampler",
                        "augmenter": "rationai.datagens.augmenters.NoOpImageAugmenter",
                        "extractor": "rationai.datagens.extractors.OpenslideExtractor",
                        "generator": "rationai.datagens.generators.BaseGeneratorPytorch"
                    },
                    "configurations": {
                        "sampler": {
                            "epoch_size": 100,
                            "index_levels": ["is_cancer", "slide_name"]
                        },
                        "augmenter": {
                            "horizontal_flip": 0.5,
                            "vertical_flip": 0.5,
                            "rotate_interval": [1,3]
                        },
                        "extractor": {},
                        "generator": {}
                    }
                },
                "valid_gen": {
                    "components": {
                        "data_source": "valid",
                        "sampler": "rationai.datagens.samplers.SequentialTreeSampler",
                        "augmenter": "rationai.datagens.augmenters.NoOpImageAugmenter",
                        "extractor": "rationai.datagens.extractors.OpenslideExtractor",
                        "generator": "rationai.datagens.generators.BaseGeneratorKeras"
                    },
                    "configurations": {
                        "sampler": {"index_levels": ["slide_name"]},
                        "augmenter": {},
                        "extractor": {},
                        "generator": {}
                    }
                }
            }
        },
        "model": {
            "checkpoint": null,
            "input_shape": [512, 512, 3],
            "output_size": 1,
            "dropout": 0.5,
            "components": {
                "convolution_network": "tensorflow.keras.applications.VGG16",
                "output_activation_fn": "tensorflow.keras.activations.linear",
                "optimizer": "tensorflow.keras.optimizers.Adam",
                "metrics": ["tensorflow.keras.metrics.BinaryAccuracy"],
                "loss": "tensorflow.keras.losses.BinaryCrossentropy",
                "regularizer": "tensorflow.keras.regularizers.L1"
            },
            "configurations": {
                "convolution_network": {"include_top": false, "weights": null, "pooling": "max"},
                "optimizer": {"learning_rate": 0.05, "beta_1": 0.5, "beta_2": 1.0},
                "metrics": [{"threshold": 0.75}],
                "loss": {"from_logits": true},
                "regularizer": {"l1": 0.005}
            }
        },
        "executor": {
            "epochs": 1,
            "max_queue_size": 50,
            "workers": 10,
            "use_multiprocessing": false,
            "callbacks": {
                "definitions": [
                    "tensorflow.keras.callbacks.EarlyStopping",
                    "tensorflow.keras.callbacks.ModelCheckpoint"
                ],
                "configurations": [
                    {"monitor": "loss", "patience": 5},
                    {
                        "filepath": "test.ckpt",
                        "monitor": "val_loss",
                        "save_best_only": true
                    }
                ]
            }
        }
    }
}