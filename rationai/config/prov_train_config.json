{
    "output_dir": "/home/meta/matejg/Data/camelyon16/cam16_experiments/",
    "train_generator": "train_gen",
    "valid_generator": null,
    "definitions": {
        "datagen": "rationai.datagens.datagens.GeneratorDatagen",
        "model": "rationai.training.models.keras_models.PretrainedNet",
        "executor": "rationai.training.executors.keras_executors.KerasExecutor"
    },
    "configurations": {
        "datagen": {
            "data_sources": {
                "_class": "rationai.datagens.datasources.HDF5DataSource",
                "_data": "/home/meta/matejg/Data/camelyon16/cam16_mrxs/cam16_mrxs.h5",
                "definitions": {
                    "train_ds": {
                        "keys": ["train"],
                        "names": ["train"]
                    }
                }
            },
            "generators": {
                "train_gen": {
                    "components": {
                        "data_source": "train",
                        "sampler": "rationai.datagens.samplers.RandomTreeSampler",
                        "augmenter": "rationai.datagens.augmenters.ImageAugmenter",
                        "extractor": "rationai.datagens.extractors.OpenslideExtractor",
                        "generator": "rationai.datagens.generators.BaseGeneratorKeras"
                    },
                    "configurations": {
                        "sampler": {
                            "epoch_size": 50,
                            "index_levels": ["is_cancer", "slide_name"],
                            "seed": 2023
                        },
                        "augmenter": {
                            "horizontal_flip": 0.5,
                            "vertical_flip": 0.5,
                            "rotate_interval": [1,3],
                            "seed": 2023
                        },
                        "extractor": {},
                        "generator": {
                            "resample": true,
                            "batch_size": 1
                        }
                    }
                }
            }
        },
        "model": {
            "checkpoint": null,
            "input_shape": [512, 512, 3],
            "output_size": 1,
            "dropout": 0.5,
            "components": {
                "convolution_network": "tensorflow.keras.applications.VGG16",
                "output_activation_fn": "tensorflow.keras.activations.sigmoid",
                "optimizer": "tensorflow.keras.optimizers.Adam",
                "metrics": [
                    "tensorflow.keras.metrics.BinaryAccuracy",
                    "tensorflow.keras.metrics.Precision",
                    "tensorflow.keras.metrics.Recall",
                    "tensorflow.keras.metrics.AUC"
                ],
                "loss": "tensorflow.keras.losses.BinaryCrossentropy",
                "regularizer": "tensorflow.keras.regularizers.L2"
            },
            "configurations": {
                "convolution_network": {"include_top": false, "weights": "imagenet", "pooling": "max"},
                "optimizer": {"learning_rate": 5e-05},
                "metrics": [],
                "loss": {"from_logits": false},
                "regularizer": {"l2": 5e-05}
            }
        },
        "executor": {
            "epochs": 3,
            "max_queue_size": 50,
            "workers": 1,
            "use_multiprocessing": false,
	    "shuffle": false,
            "callbacks": {
                "definitions": [
                    "tensorflow.keras.callbacks.EarlyStopping",
                    "rationai.training.executors.keras_callbacks.ProvenanceModelCheckpoint",
                    "rationai.training.executors.keras_callbacks.ProvenanceModelCheckpoint",
                    "rationai.training.executors.keras_callbacks.ProvenanceCallback"
                ],
                "configurations": [
                    {"monitor": "loss", "patience": 5},
                    {
                        "filepath": "best_loss.ckpt",
                        "monitor": "loss",
                        "save_best_only": true,
                        "save_weights_only": true,
                        "verbose": 1
                    },
                    {
                        "filepath": "auc_{epoch:02d}.ckpt",
                        "monitor": "auc",
                        "save_best_only": false,
                        "save_weights_only": true,
                        "verbose": 1
                    },
                    {"update_prov_epoch": true}
                ]
            }
        }
    }
}
