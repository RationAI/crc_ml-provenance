{
    "experiment": {
        "seed": 0,
        "experiment_prefix": "MY-EXPERIMENT",
        "continue": {
            "eid": "",
            "copy_data": true
        },
        "ordered_steps": [
            "exp.train",
            "exp.test",
            "heatmaps"
        ]
    },

    "data": {
        "dirs": {
            "results": "models",
            "root": "data/Camelyon16",
            "rgb": "slides",
            "coord_maps": "no_overlap-L1-T512-S512-C256-MIN05-MAX1",

            "dataset": {
                "name": "no_overlap-L1-T512-S512-C256-MIN05-MAX1.h5",
                "valid_size": 0.10,
                "pd_label_col": "center_tumor_tile"
            }
        },

        "meta": {
            "level": 1,
            "tile_size": 512,
            "center_size": 256,
            "step_size": 512,
            "include_annot_keywords": ["Tumor", "_0", "_1"],
            "exclude_annot_keywords": ["Exclude", "_2"]
        }
    },

    "generator": {
        "batch_size": 1,
        "valid_generator_type": "linear",
        "steps_per_epoch": 20000,
        "validation_steps": 8000,

        "train_augment": true,
        "valid_augment": false,
        "test_augment": false,

        "extractor": {
            "class_name": "BinaryClassExtractor"
        },

        "augmenter": {
            "class_name": "SlideAugmenter",
            "config": {
                "horizontal": 0.5,
                "vertical": 0.5,
                "brightness": [-64, 64],
                "hue": [-64, 64],
                "saturation": [-64, 64],
                "contrast": [0.7, 1.3]
            }
        },

        "sampler": {
            "sampling_strat": {
                "center_tumor_tile": [],
                "slide_name": []
            },
            "sequence_column": "slide_name"
        }
    },

    "model": {
        "class_name": "PretrainedModel",
        "keras_application": {
            "class_name": "VGG16",
            "config": {
                "pooling": "max"
            }
        },

        "optimizer": {
            "class_name": "RMSProp",
            "config": {
                "lr": 5e-5,
                "momentum": 0.9,
                "epsilon": 1.0,
                "rho": 0.9
            }
        },

        "loss": {
            "class_name": "BinaryCrossentropy"
        },

        "regularizer": {
            "class_name": "L2",
            "config": {
                "l2": 5e-05
            }
        },

        "input_shape": [
            512,
            512,
            3
        ],

        "output_size": 1,
        "train_checkpoint": null,
        "test_checkpoint": "early.hdf5",
        "output_bias": null,
        "trainable": true,
        "dropout": 0.5,

        "sequence_metrics": [
            {"class_name": "BinaryAccuracy"},
            {"class_name": "Precision"},
            {"class_name": "Recall"},
            {"class_name": "F1"},
            {"class_name": "AUC"}
        ],
        "total_metrics": [
            {"class_name": "Precision"},
            {"class_name": "Recall"}
        ]

    },

    "step_definitions": {
        "exp.train": {
            "init": {
                "class_id": "rationai.training.ExperimentRunner",
                "config": {
                    "experiment_class": "ClassificationExperiment"
                }
            },
            "exec": {
                "method": "train",
                "kwargs": {
                    "fit_kwargs": {
                        "epochs": 30,
                        "workers": 15,
                        "use_multiprocessing": true,
                        "max_queue_size": 50,
                        "callbacks": [
                            {
                                "class_name": "ModelCheckpoint",
                                "config": {
                                    "filepath": "early.hdf5",
                                    "monitor": "val_auc",
                                    "verbose": 1,
                                    "save_best_only": true,
                                    "save_weights_only": true,
                                    "period": 1,
                                    "mode": "max"
                                }

                            },
                            {
                                "class_name": "ReduceLROnPlateau",
                                "config": {
                                    "monitor": "val_loss",
                                    "factor": 0.5,
                                    "min_lr": 1e-07,
                                    "mode": "max",
                                    "patience": 3
                                }
                            },
                            {
                                "class_name": "EarlyStopping",
                                "config": {
                                    "monitor": "val_auc",
                                    "patience": 5,
                                    "mode": "max",
                                    "restore_best_weights": true
                                }
                            },
                            {
                                "class_name": "TensorBoard",
                                "config": {
                                    "log_dir": "logs",
                                    "histogram_freq": 1
                                }
                            }
                        ]
                    }
                }
            }
        },

        "exp.test": {
            "init": {
                "class_id": "rationai.training.ExperimentRunner",
                "config": {
                    "experiment_class": "ClassificationExperiment"
                }
            },
            "exec": {
                "method": "infer",
                "kwargs": {
                    "infer_type": "predict_evaluate",
                    "infer_params": {
                        "workers": 10,
                        "max_queue_size": 50,
                        "use_multiprocessing": true
                    }
                }
            }
        },

        "heatmaps": {
            "init": {
                "class_id": "rationai.visual.HeatmapVisualizer",
                "config": {
                    "visual_level": 1,
                    "max_workers": 4
                }
            },
            "exec": {
                "method": "run",
                "kwargs": {
                    "slide_pattern": "test_1*"
                }
            }
        },

        "froc": {
            "init": {
                "class_id": "rationai.eval.FROC",
                "config": {
                    "visual_level": 1,
                    "nms_threshold": 0.5,
                    "nms_radius": 1,
                    "nms_neighbourhood": "google",
                    "max_workers": 4
                }
            },
            "exec": {
                "method": "run",
                "kwargs": {
                    "heatmap_pattern": "test_1*"
                }
            }
        },

        "saliency": {
            "init": {
                "class_id": "rationai.visual.explain.SaliencyRunner",
                "config": {
                    "grad_modifier": null
                }
            },
            "exec": {
                "method": "run",
                "kwargs": {
                    "slide_names": ["test_016"]
                }
            }
        },

        "occlusion": {
            "init": {
                "class_id": "rationai.visual.explain.OcclusionRunner",
                "config": {
                    "window_size": 55,
                    "stride": 25,
                    "pixel": 0,
                    "interpolation": "nearest"
                }
            },
            "exec": {
                "method": "run",
                "kwargs": {
                    "slide_names": ["test_016"]
                }
            }
        }
    }
}
